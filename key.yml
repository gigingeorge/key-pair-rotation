---
- name: " Playbook for key rotation"
  hosts: localhost
  become: true
  vars_files:
  - access_key.vars
  tasks:  
    # ---------------------------------------------------------------
    # Getting Information About Of Ec2's Which Need key To be Rotated
    # ---------------------------------------------------------------
    



  - name:
    ec2_instance_info:
      aws_access_key: "{{ access_key }}"
      aws_secret_key: "{{ secret_key }}"
      region: "{{region}}"
      filters:
        "key-name": "{{ key_name }}"
        instance-state-name: [ "running"]
    register: ec2_info

    # ------------------------------------------------------------
    # Creating Inventory Of Ec2  With Old Ssh-keyPair
    # ------------------------------------------------------------    

  - name: creating inventory
    add_host:
      name: "{{item.private_ip_address}}"
      groups: "rotation"
      ansible_host: "{{ item.private_ip_address }}"
      ansible_port: 22
      ansible_user: "ec2-user"
      ansible_ssh_private_key_file: "{{ key_name }}.pem"
      ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
    with_items:
    - "{{ ec2_info.instances }}"

    # ---------------------------------------------------------------
    # Changing The Key Pair Process
    # ---------------------------------------------------------------
    

- name: SSH key updation
  hosts: rotation
  become: true
  vars_files:
  - access_key.vars
  tasks:
    # ---------------------------------------------------------------
    # Creating New Key Pair
    # ---------------------------------------------------------------

  - name: creating new key pair
    delegate_to: localhost
    run_once: true
    openssh_keypair:
      path: "{{key_tmp}}"
      type: rsa
      size: 4096
      state: present 

  - name: Adding New SshKey Meterial to Authorized keys
    authorized_key:
      user: ec2-user
      state: present
      key: "{{ lookup('file', '{{ key_tmp }}.pub')  }}"

    # ---------------------------------------------------------------
    # Checking whether we are able to SSH into server with new key
    # ---------------------------------------------------------------

  - name: "Creating Ssh Connection Command"
    set_fact:
      ssh_connection: "ssh -o StrictHostKeyChecking=no -i {{ key_tmp }} {{ansible_ssh_user}}@{{ ansible_ssh_host }} 'uptime'"

  - name: "checking the ssh connection with newly added key"
    delegate_to: localhost
    shell: "{{ ssh_connection }}"
    register: ssh_check


    # ---------------------------------------------------------------
    # Removing old Key material
    # ---------------------------------------------------------------

  - name: "Removing Old KeyMeterial"
    when: ssh_check.changed == true
    authorized_key:
      user: ec2-user
      state: present
      key: "{{ lookup('file', '{{ key_tmp }}.pub')  }}"
      exclusive: true 
    # ---------------------------------------------------------------
    # Updating the new key material to AWS account
    # ---------------------------------------------------------------

  - name: Chaning key material on aws account
    delegate_to: localhost
    run_once: True
    ec2_key:
      aws_access_key: "{{ access_key }}"
      aws_secret_key: "{{ secret_key }}"
      region: "{{region}}"
      name: "{{key_name}}"
      key_material: "{{ lookup('file', '{{ key_tmp }}.pub') }}"
      force: true
      state: present
    # ---------------------------------------------------------------
    # Replacing the local key material 
    # ---------------------------------------------------------------

  
  - name: changing local public key
    delegate_to: localhost
    run_once: true
    shell: "mv {{key_tmp}}.pub {{key_name}}.pub"
  
  - name: changing local private key
    delegate_to: localhost
    run_once: true
    shell: "mv {{key_tmp}} {{key_name}}.pem"  



